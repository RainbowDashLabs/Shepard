/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id "io.freefair.lombok" version "5.1.0"
    id 'application'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url = uri('https://dl.bintray.com/kodehawa/maven')
    }

    maven {
        url = uri('https://jitpack.io')
    }

}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.0'
    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'com.sparkjava:spark-core:2.8.0'
    implementation 'postgresql:postgresql:9.1-901-1.jdbc4'
    implementation('net.dv8tion:JDA:4.1.1_145') {
        exclude module: 'opus-java'
    }
    implementation 'club.minnced:discord-webhooks:0.2.0'
    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'net.kodehawa:imageboard-api:2.0.5'
    implementation 'org.yaml:snakeyaml:1.21'
    implementation 'org.postgresql:postgresql:42.2.6.jre7'
    implementation 'info.debatty:java-string-similarity:1.2.1'
    implementation 'org.discordbots:DBL-Java-Library:2.0.1'
    implementation 'com.google.guava:guava:28.2-jre'


    testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.2")
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation "org.mockito:mockito-junit-jupiter:3.+"
    testImplementation "org.powermock:powermock-module-junit4:2.+"
    testImplementation "org.powermock:powermock-api-mockito2:2.+"
}

group = 'ShepardBot'
version = '2.0.5'
sourceCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes 'Main-Class': 'de.eldoria.shepard.ShepardBot'
    }
    from {
        sourceSets.main.compileClasspath.collect {it.isDirectory() ? it : zipTree(it)}
    }
}